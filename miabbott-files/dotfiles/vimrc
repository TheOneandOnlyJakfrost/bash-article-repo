" .vimrc heavily stolen from http://dougblack.io/words/a-good-vimrc.html
"
" Enable Pathogen
execute pathogen#infect()

" Syntax Processing
syntax enable

" Colorscheme
let g:solarize_termcolors=256
set t_Co=256            " force vim to use 256 colors
set background=dark
colorscheme solarized

" Spaces & Tabs
set tabstop=4           " number of spaces per tab visually displayed
set softtabstop=4       " match to tabstop
set shiftwidth=4        " set cols for reindent ops (>>)
set expandtab           " tabs are spaces
filetype plugin indent on      " load plugin/indent files for filetypes

" UI Config
set number              " show line numbers
set showcmd             " show current command (INSERT/REPLACE/etc)
set cursorline          " highlight current line
set lazyredraw          " redraw only when neeeded
set showmatch           " highlight matching [{()}]
set list                " highlight whitespace
set cursorcolumn        " vertical ruler

" Searching
set incsearch           " search as characters are entered
set hlsearch            " highlight matches
" turn off search highlight; default to:  \<space>
nnoremap <leader><space> :nohlsearch<CR>

" Folding
set foldenable          " enable folding
set foldlevelstart=10   " open most folds by default
set foldnestmax=10      " 10 nested fold max
set foldmethod=indent   " fold based on indent level
" space open/closes folds
nnoremap <space> za

" Tmux
" allows cursor change in tmux mode
if exists('$TMUX')
    let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
    let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
    let &t_SI = "\<Esc>]50;CursorShape=1\x7"
    let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

" Autogroups
" This is a slew of commands that create language-specific settings for
" certain filetypes/file extensions. It is important to note they are wrapped
" in an augroup as this ensures the autocmd's are only applied once. In
" addition, the autocmd! directive clears all the autocmd's for the current
" group.
augroup configgroup
    autocmd!
    autocmd VimEnter * highlight clear SignColumn
    autocmd FileType python setlocal commentstring=#\ %s
    autocmd BufEnter Makefile setlocal noexpandtab
    autocmd BufEnter *.sh setlocal tabstop=2
    autocmd BufEnter *.sh setlocal shiftwidth=2
    autocmd BufEnter *.sh setlocal softtabstop=2
    " Strip trailing whitespace
    " http://vim.wikia.com/wiki/Remove_unwanted_spaces
    autocmd BufWritePre *.py,*.txt,*.md :%s/\s\+$//e
augroup END

" Backups
" move backups to /tmp
set backup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set backupskip=/tmp/*,/private/tmp/*
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set writebackup

" Errata

set pastetoggle=<F2>    " disable auto-indent when pasting

set laststatus=2        " always display statusline

match ErrorMsg '\s\+$'  " highlight trailing whitespace

" .md files are Markdown
autocmd BufNewFile,BufRead *.md set filetype=markdown

" limit gitcommit messages to 70 characters
autocmd Filetype gitcommit setlocal textwidth=70

" Hat tip to @jlebon for these three tweaks
" Characters to use when :set list is turned on to display hidden chars
set listchars=tab:>-,trail:~,extends:>,precedes:<

" Show/hide hidden characters
nnoremap <F3> :set list!<CR>:set list?<CR>

" Keep cursor within 10 lines of top or bottom line when scrolling
set scrolloff=10

"Remove all trailing whitespace by pressing F5
nnoremap <F5> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar><CR>

"Ansible template
if has("autocmd")
    augroup templates
        autocmd BufNewFile *.yml 0r ~/.vim/templates/ansible.yml
    augroup END
endif

"Diff
set diffopt=vertical
