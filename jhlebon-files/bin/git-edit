#!/bin/bash

# If no rev given, opens vim with the currently modified and untracked
# files. If a rev is given, open vim with the modified files in the rev.

set -e

print_help() {
	echo "Usage: $0 [-u|--untracked] [rev|file] [rev|file]..."
	echo "If no [rev] given, open currently modified and untracked files in vim. If [rev] given, open files modified in [rev] in vim. If [file] given, also open the file."
	echo "  -u,--untracked  when no rev given, determines whether to include untracked files"
}

untracked=0
if [ "$1" == -u ]; then
	shift
	untracked=1
fi

if [ $# -eq 0 ]; then
	modified_files=$(git status --ignore-submodules --porcelain | \
	                 grep -E '^ *M ' | \
	                 awk '{ print $2 }')
	files="$modified_files"
	if [ $untracked == 1 ]; then
		#files=$(git ls-files -m --other --exclude-standard)
		# This way is better because it avoids deleted files
		untracked_files=$(git ls-files --other --exclude-standard)
		# XXX: make this prettier somehow?
		untracked_files=$(for file in $untracked_files; do
		                     if ! file --mime "$file" | grep -q charset=binary; then
		                         realpath $(pwd)/$file
		                     fi
		                  done)
		files="$files $untracked_files"
	fi
elif [ "$1" == "--help" ] || [ "$1" == "-h" ]; then
	print_help
	exit 0
else
	files=
	while test $# -gt 0; do
		if [ -f "$1" ]; then
			files="$files $1"
		else
			files="$files $(git diff-tree --no-commit-id --name-only -r $1)"
		fi
		shift
	done
fi

cd $(git rev-parse --show-toplevel)

canonfiles=
for file in $files; do
	canonfiles="$canonfiles $(readlink -f $file)"
done

cd -

if [ -f /usr/bin/vimx ]; then
    alias vim='vimx'
    VIM=vimx
else
    VIM=vim
fi

$VIM $canonfiles
